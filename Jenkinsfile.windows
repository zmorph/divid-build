pipeline {
    agent {label 'WSERVER1809'}

    environment{
        old_files = fileExists './windows-installers'
        //old_containers = sh (script: 'docker ps -a -f name=cura-build-environment | wc -l', , returnStdout:true).trim()
        BRANCH_NAME = "${GIT_BRANCH.split("/")[1]}"
    }

    stages {
        
        stage ('Clean environment files') {            

            when { expression { old_files == 'true' } }
            steps {
                bat 'powershell "rm -r -fo ./windows-installers"'
            }
        }

        stage ('Run build') {            
            steps {
                withCredentials([file(credentialsId: 'certificate_windows', variable: 'CERTIFICATE_WINDOWS')]) {
                    bat 'powershell "Copy-Item %CERTIFICATE_WINDOWS% -Destination ./docker/windows/certificate.pfx"'
                    withEnv(["branch=$BRANCH_NAME"]) {
                        bat 'powershell "./docker/windows/build.ps1 %branch%"'
                    }
                    bat 'powershell "Remove-Item ./docker/windows/certificate.pfx"'
                }
            }
        }
    
        stage ('Signing') {            
            steps {
                withCredentials([file(credentialsId: 'certificate_windows', variable: 'CERTIFICATE_WINDOWS')]) {
                    bat 'powershell "signtool sign  /fd SHA256 /a /f %CERTIFICATE_WINDOWS% ./windows-installers/output/Zmorph_Divid*"'
                    bat 'powershell "./signing/windows_installer_exe_signing.ps1"'
                }
            }
        }
   
    }
    
    post {
        always {
            archiveArtifacts artifacts: 'windows-installers/output/', fingerprint: true
        }
    }    

}